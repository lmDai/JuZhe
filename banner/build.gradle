apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

version = "1.4.10"
def ext = rootProject.ext
def version = ext.versions
def dependencie = ext.dependencies
android {

    buildToolsVersion '28.0.3'

    compileSdkVersion version.compileSdkVersion
    defaultConfig {
        minSdkVersion version.minSdkVersion
        targetSdkVersion version.targetSdkVersion
        versionCode version.versionCode
        versionName version.versionName
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly 'com.android.support:support-v4:+'
}


def siteUrl = 'https://github.com/youth5201314/banner' // 项目的主页
def gitUrl = 'https://github.com/youth5201314/banner.git' // Git仓库的url
group = "com.youth.banner" //一般填你唯一的包名
//gradlew bintrayUpload
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here项目描述
                name 'Android图片轮播控件'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {//填写的一些基本信息
                        id 'youth5201314'
                        name 'spring'
                        email '1028729086@qq.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
//    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())



